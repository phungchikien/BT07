A2:
#include<iostream>
using namespace std;
void in(int* mang,int size1){
    cout<<(sizeof(mang)/sizeof(int));
}
int main(){
    int mang[]={11,32,55,9};
    int size1=sizeof(mang)/sizeof(int);
    in(mang,size1);
    cout<<endl;
    cout<<size1;
}

A3: 
#include<iostream>
using namespace std;
int count;
int count1;
void count_even(int* mang,int size){
    for(int i=0;i<5;i++){
        if(mang[i]%2==0) count++;
    }
    cout<<count<<endl;
    for(int i=size-1;i>size-6;i--){
        if(mang[i]%2==0) count1++;
    }
    cout<<count1;

}
int main(){
    int mang[]={2,4,6,8,10,22,44,35,66,9,11,24,36};
    int size=sizeof(mang)/sizeof(int);
    count_even(mang,size);
}

mảng động VD:
#include<iostream>
using namespace std;
int main(){
   int n;
   cin>>n;
   int* mang;
   mang = new int[n];
   for(int i=0;i<n;i++){
        cin>>mang[i];
   }
   int count=0;
   for(int i=0;i<n;i++){
        if(mang[i]%mang[0]==0) count++;
   }
   cout<<count;
   delete[] mang;
   return 0;
}
4:
#include<iostream>
#include<algorithm>
using namespace std;
int array[9]={1,2,3,4,5,6,7,8,9};
int index=-1;
int* p =array;
void binarySearch(int array[],int key){
    int size=9;
    int high=size-1;
    int low=0;
    while(low<=high&&index==-1){
        int mid=(low+high)/2;
        if((*(p+mid))<key) low=mid+1;
        else if((*(p+mid))>key) high=mid-1;
        else index=mid;
    }
    cout<<index;
}
int main(){
    int key;
    cin>>key;
    cout<<endl;
    binarySearch(array,key);
}


