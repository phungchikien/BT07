A2:
#include<iostream>
using namespace std;
void in(int* mang,int size1){
    cout<<(sizeof(mang)/sizeof(int));
}
int main(){
    int mang[]={11,32,55,9};
    int size1=sizeof(mang)/sizeof(int);
    in(mang,size1);
    cout<<endl;
    cout<<size1;
}

A3: 
#include<iostream>
using namespace std;
int count;
int count1;
void count_even(int* mang,int size){
    for(int i=0;i<5;i++){
        if(mang[i]%2==0) count++;
    }
    cout<<count<<endl;
    for(int i=size-1;i>size-6;i--){
        if(mang[i]%2==0) count1++;
    }
    cout<<count1;

}
int main(){
    int mang[]={2,4,6,8,10,22,44,35,66,9,11,24,36};
    int size=sizeof(mang)/sizeof(int);
    count_even(mang,size);
}


mảng động VD:
#include<iostream>
using namespace std;
int main(){
   int n;
   cin>>n;
   int* mang;
   mang = new int[n];
   for(int i=0;i<n;i++){
        cin>>mang[i];
   }
   int count=0;
   for(int i=0;i<n;i++){
        if(mang[i]%mang[0]==0) count++;
   }
   cout<<count;
   delete[] mang;
   return 0;
}
4:
#include<iostream>
#include<algorithm>
using namespace std;
int array[9]={1,2,3,4,5,6,7,8,9};
int index=-1;
int* p =array;
void binarySearch(int array[],int key){
    int size=9;
    int high=size-1;
    int low=0;
    while(low<=high&&index==-1){
        int mid=(low+high)/2;
        if((*(p+mid))<key) low=mid+1;
        else if((*(p+mid))>key) high=mid-1;
        else index=mid;
    }
    cout<<index;
}
int main(){
    int key;
    cin>>key;
    cout<<endl;
    binarySearch(array,key);
}
5:
#include<iostream>
#include<cstring>
using namespace std;
char* weird_string(){
    char c[]="123345";
    return c;
}
int main(){
    weird_string();
}
7(bug):
#include<iostream>
#include<cstring>
using namespace std;
const char* str2 = "Hello apple, orange, orange car, orange chair";
const char* str1 = "orange";
int main(){
    int count=0;
    int s=strlen(str2);
    for(int i=1;i<=s;i++){
        if(str2[i]=='o'){
            
            }
        }
    }
    cout<<count;


}
BT08(Đảo xâu):
#include<iostream>
#include<cstring>
using namespace std;
const char* a="orange";

void reverse(const char a[]){
    char b[strlen(a)];
    strcpy(b,a);
    for(int i=5;i>=0;i--){
        cout<<b[i];
    }
}
int main(){
    reverse(a);
}
Bt08:delete_char
#include<iostream>
#include<utility>
#include<cstring>
using namespace std;
const char* a="I love code";
int strlenn(const char a[]){
    int i=0;
    int count=0;
    while('a[i]'>=65&&'a[i]'<=90||'a[i]'>=97&&'a[i]'<=12){
        count++;
        i++;
    }
    return count;
}

void delete_char(const char a[],char c){
    char *p=new char[strlen(a)];
    for(int i = 0;i<strlen(a);i++){
        if(a[i]== c){
            p[i]='.';
        }else if(a[i]!=c){
            p[i]=a[i];
        }
    }
    for(int i=0;i<strlen(a);i++){
        if(p[i]!='.')
        cout<<p[i];
    }
}
int main()  {
    char b;
    cin>>b;
    delete_char(a,b);
}
BT08:
A1:
#include<iostream>
using namespace std;
void f(int xval)
{
   int x;
   x = xval;
   // in địa chỉ của x tại đây
   int* p1=&x;
   cout<<p1;
}
void g(int yval)
{
   int y;
   // in địa chỉ của y tại đây
   y=yval;
   int* p=&y;
   cout<<p;
}
int main()
{
   f(7);
   cout<<endl;
   g(11);
   return 0;
}
Note: Có địa chỉ giống nhau.
A3:#include<iostream>
#include<utility>
using namespace std;
void swap_pointers(const char*& x,const char*& y)
{

   const char *tmp =x;
   x = y;
   y = tmp;
}
int main()
{
   const char a[] = "I should print second";
   const char b[] = "I should print first";

   const char *s1 = a;
   const char *s2 = b;
   swap_pointers(s1,s2);
   cout << "s1 is " << s1 << endl;
   cout << "s2 is " << s2 << endl;
   return 0;
}

Note: Có thể dùng thư viện <utility> hàm swap
- Hàm swap được const char và char.
- Hàm chỉ swap 2 biến char có cùng độ dài nếu không dùng con trỏ và có thể swap nếu dùng con trỏ



